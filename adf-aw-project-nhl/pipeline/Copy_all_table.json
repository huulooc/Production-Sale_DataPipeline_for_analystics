{
	"name": "Copy_all_table",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Select \ns.name as SchemaName,\nt.Name as TableName \nfrom sys.tables t\nInner Join sys.schemas s\non t.schema_id= s.schema_id \n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "item().SchemaName",
							"TableName": "item().TableName"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "lastload",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "currentload",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat('select * from ', item().SchemaName, '.', item().TableName, 'where ModifiedDate > ', activity('lastload').output.firstRow.lastload, ' and ModifiedDate < ', activity('currentload').output.firstRow.maxdate  )",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SqlServerTable1",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": "@item().SchemaName",
										"TableName": "@item().TableName"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ParquetSink",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": {
											"value": "@item().SchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "lastload",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select lastload as lastload from water_table where tablename = [',item().SchemaName,'].[' ,item().Tablename,']')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": "item().SchemaName",
										"TableName": "item().TableName"
									}
								}
							}
						},
						{
							"name": "currentload",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select max(ModifiedDate) as maxdate from ',item().SchemaName,'.', item().TableName)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": "item().SchemaName",
										"TableName": "item().TableName"
									}
								}
							}
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_UpdateWaterTable]",
								"storedProcedureParameters": {
									"lastload": {
										"value": {
											"value": "@activity('currentload').output.firstRow.maxdate",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"SchemaName": {
										"value": {
											"value": "@item().SchemaName",
											"type": "Expression"
										},
										"type": "String"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Notebook1",
				"type": "DatabricksNotebook",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/locnh22406@st.uel.edu.vn/bronze to silver"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricksLinkedService",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Notebook2",
				"type": "DatabricksNotebook",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Notebook1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/locnh22406@st.uel.edu.vn/silver to gold"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricksLinkedService",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2025-09-30T07:09:01Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}